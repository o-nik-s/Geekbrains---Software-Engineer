package Seminar2;
/**
 * Проверка правильности ввода пароля.
 * Напишите программу, которая запрашивает у пользователя пароль. Правила для пароля следующие:
 *
 * Длина пароля должна быть не менее 8 символов.
 * Пароль должен содержать хотя бы одну заглавную букву.
 * Пароль должен содержать хотя бы одну цифру.
 * Пароль должен содержать хотя бы один специальный символ (!@#$%^&*).
 * Если пользователь вводит неправильный пароль, программа должна выбрасывать исключение InvalidPasswordException
 * с сообщением о причине ошибки. Необходимо обработать исключение и вывести соответствующее сообщение.
 */
import java.util.Scanner;
public class Task2 {
    public static void main(String[] args) {

    }
}

class PasswordValidationExample {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Введите пароль: ");
        String password = scanner.nextLine();

        try {
            validatePassword(password);
            System.out.println("Пароль прошел проверку");
        } catch (InvalidPasswordException e) {
            System.out.println("Ошибка: " + e.getMessage());
        }
    }

    public static void validatePassword(String password) throws InvalidPasswordException {
        if (password.length() < 8) {
            throw new InvalidPasswordException("Пароль должен содержать не менее 8 символов");
        }

        if (!password.matches(".*[A-Z].*")) {
            throw new InvalidPasswordException("Пароль должен содержать хотя бы одну заглавную букву");
        }

        if (!password.matches(".*\\d.*")) {
            throw new InvalidPasswordException("Пароль должен содержать хотя бы одну цифру");
        }

        if (!password.matches(".*[!@#$%^&*].*")) {
            throw new InvalidPasswordException("Пароль должен содержать хотя бы один специальный символ (!@#$%^&*)");
        }
    }
}

class InvalidPasswordException extends Exception {
    public InvalidPasswordException(String message) {
        super(message);
    }
}

/**
 * Вначале мы импортируем класс Scanner, который позволяет считывать ввод пользователя.
 * Затем определен класс PasswordValidationExample, который содержит метод main - точку входа в программу.
 * Внутри метода main создается экземпляр класса Scanner для чтения пользовательского ввода. Затем выводится приглашение для ввода пароля.
 * Пользователь вводит пароль, который сохраняется в переменной password.
 * Далее следует блок try-catch, в котором вызывается метод validatePassword(password) для проверки пароля.
 * Метод validatePassword принимает введенный пароль в качестве аргумента и выбрасывает исключения типа InvalidPasswordException, если пароль не соответствует заданным правилам.
 * Правила проверки пароля включают:
 * Длина пароля должна быть не менее 8 символов.
 * Пароль должен содержать хотя бы одну заглавную букву.
 * Пароль должен содержать хотя бы одну цифру.
 * Пароль должен содержать хотя бы один специальный символ (!@#$%^&*).
 * Если пароль успешно проходит проверку, то выводится сообщение "Пароль прошел проверку".
 * Если возникает исключение InvalidPasswordException, то перехватывается блоком catch, и выводится сообщение об ошибке, которое было передано в исключении.
 * Наконец, класс InvalidPasswordException представляет пользовательское исключение, которое наследуется от класса Exception и используется для сигнализации о некорректном пароле.
 * Таким образом, программа позволяет пользователю ввести пароль и проверяет его на соответствие определенным правилам.
 * В случае несоответствия правилам, выбрасывается исключение, которое обрабатывается блоком catch, а в случае успешной проверки выводится сообщение об успешной проверке пароля. Это позволяет контролировать и обрабатывать ошибки при проверке пароля.
 */