1.

mkdir wordpress && cd wordpress
mkdir nginx-conf
change


nano .env
change
nano .dockerignore


nano docker-compose.yml

version: '3'
services:
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    volumes:
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network
  wordpress:
    depends_on:
      - db
    image: wordpress:5.1.1-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=123
      - WORDPRESS_DB_PASSWORD=123
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network
  webserver:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network
  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - wordpress:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email info@osuslova.com --agree-tos --no-eff-email --staging -d osuslova.com -d www.osuslova.com
volumes:
  certbot-etc:
  wordpress:
  dbdata:
networks:
  app-network:
    driver: bridge  

docker-compose up -d
docker-compose up -d --force-recreate --no-deps webserver

2.
sudo docker network create my-network
sudo docker run --name my-db --network my-network -e MYSQL_ROOT_PASSWORD=password -d mariadb:10.8
sudo docker run --name my-phpmyadmin --network my-network -e PMA_HOST=my-db -p 8080:80 -d phpmyadmin
curl http://localhost:8080